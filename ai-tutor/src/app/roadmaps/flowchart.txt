flowchart LR
 subgraph s1["Week 1"]
        n5["Basic Java Syntax"]
        n6["Java Primitive Types"]
        n7["Java Objects"]
        n8["Classes"]
        n9["Inheritance"]
  end
 subgraph s2["Week 2"]
        n1["Interfaces"]
        n2["File I/O"]
        n3["Overriding/Shadowing"]
        n4["Object Oriented Design Principles"]
        n10["SOLID"]
        n20["super"]
        n21["final"]
  end
 subgraph s3["Week 3"]
        n15["Parametric Polymorphism"]
        n16["Exceptions"]
        n17["User Stories"]
        n18["Git"]
  end
 subgraph s4["Week 4"]
        n19["Software Engineering Processes"]
        n22["Waterfall"]
        n23["Agile"]
        n24["Scrum"]
        n25["CRC"]
        n26["UML Diagrams"]
  end
 subgraph s5["Week 5/6/7"]
        n27["Design Patterns"]
        n28["Observer"]
        n29["Iterator"]
        n30["Strategy"]
        n31["Command"]
        n39["Accessibility"]
  end
 subgraph s6["Week 11"]
        n32["Floating Point Numbers"]
        n33["IEEE 754 Format"]
        n34["Overflow/Underflow"]
  end
 subgraph s7["Week 9"]
        n35["Threading"]
        n36["Synchronization"]
        n37["Concurrency Pattern: Producer/Consumer Pattern"]
  end
 subgraph s8["Week 8"]
        n38["Model-View-Controller Design"]
  end
    A["Week 1"] --> B["Week 2"] & s1
    B --> C["Week 3"] & s2
    C --> D["Week 4"] & s3
    D --> E["Week 5/6/7"] & s4
    E --> H["Week 8"] & s5
    H --> I["Week 9"] & s8
    I --> J["Week 10"] & s7
    J --> K["Week 11"]
    K --> s6
    n6 --> n7
    n7 --> n8
    n8 --> n9
    n15 --> n16
    n1 --> n2
    n4 --> n10
    n3 --> n20 & n21
    n19 --> n22 & n23 & n24
    n27 --> n28 & n29 & n30 & n31
    n32 --> n33
    n35 --> n36
    n36 --> n37



